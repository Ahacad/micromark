How about https://spec.commonmark.org/0.29/#example-508 if `[bar]` is defined?

MM
- Case normalization MDIT does a great job! <https://github.com/markdown-it/markdown-it/blob/d08c7c38976f5dcdf8dfe9ea3fdf149905001d16/lib/common/utils.js#L257>
- MDIT *does* some invalid numeric character reference checking: <https://github.com/markdown-it/markdown-it/blob/d08c7c38976f5dcdf8dfe9ea3fdf149905001d16/lib/common/utils.js#L44>
- MM: I think we can use `\s` for unicode whitespace? (that’s what CM.js does!)
- `previous` should be different when escaped? E.g.: ``` "\``asd`" ``` is fine. `\**asd*` too, probably?
- make sure all constructs can start with a an escape!
- Invalid resources and references are still shortcut references.
- autolink/link: check why autolink does both encode and encodeURI, whereas link only does encodeURI?

CMSM:

- email label -> email domain, email atext -> email local part
- “Autolink email atext state” `@` case must set `sizeLabel` to `0`, instead of `1`
- “Autolink email label state” `.` case must set `sizeLabel` to `0`, instead of incrementing it
- Use “HTML End” state (also in CDATA close) when expecting a `>` (comment end, tagOpenSelfClosing can use it)
- Allow `?` inside instructions, and allow `]]]]>` to end cdata.
- Use “HTML tag close inside” state should forward `>` to tag close between too.
- Use “HTML tag open inside” state should forward `>` to tag open between too.
- “HTML tag open inside state” should forward `/` too.
- Allow two boolean attributes
- tagOpenAttributeBefore should use “value” in name?
- Comment may not start with `>` or `->`.
- Label reference shortcut close state -> Label shortcut reference
- Label resource isn’t very good
- Resource information destination unquoted inside state should not handle `>`?!!!

CM:

- How do other character references work in HTML? E.g., `&copy` -> `&amp;copy`? What about HTMLs other numeric references? (e.g., the western set?)
- Is there a reason that ```` ```asd``  ```` does not work? Whereas `***asd**` does.
- What is the reason for `` `a\nb` `` becoming `a b` instead of `a\nb`, whereas line endings in text are preserved?
- Soft breaks: are only spaces trimmed? (dingus shows tabs too. )
- Hard breaks: is there a reason tabs, that in block structure act as 4 spaces, cannot be used to create hard breaks?
- Example 637 has one space too few
- “numeric character references” at example 502 should be named. However, a better fix would be to drop “numeric”.
- links with resources should have precedence over link with references.
- image vs. link differences: https://spec.commonmark.org/dingus/?text=!%5Bfoo%20!%5Bbar%5D(%2Furl)%5D(%2Furl2) vs https://spec.commonmark.org/dingus/?text=%5Bfoo%20%5Bbar%5D(%2Furl)%5D(%2Furl2)
- Update examples to specify when they’re a recommendation instead of required: https://spec.commonmark.org/0.29/#example-572
