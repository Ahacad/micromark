var asciiControl = require('../../character/group/ascii-control')

exports.tokenize = tokenizeLabelResource

var tab = 9 // '\t'
var lineFeed = 10 // '\n'
var space = 32 // ' '
var quotationMark = 34 // '"'
var apostrophe = 39 // '''
var leftParenthesis = 40 // '('
var rightParenthesis = 41 // ')'
var lessThan = 60 // '<'
var greaterThan = 62 // '>'
var leftSquareBracket = 91 // '['
var backslash = 92 // '\'
var rightSquareBracket = 93 // ']'

function tokenizeLabelResource(effects, ok, nok) {
  var balance = 0

  return start

  function start(code) {
    /* istanbul ignore next - used when hooking into multiple characters */
    if (code !== leftParenthesis) return nok

    if (
      effects.previousToken.type !== 'imageLabel' &&
      effects.previousToken.type !== 'linkLabel'
    ) {
      return nok
    }

    console.log('efff!!!', code, effects)

    return nok
  }

  // function labelAfter(code) {
  //   if (code === leftParenthesis) {
  //     effects.enter('labelResource')
  //     effects.enter('resource')
  //     effects.enter('resourceStartMarker')
  //     effects.consume(code)
  //     effects.exit('resourceStartMarker')
  //     return resourceInformationStart
  //   }
  //
  //   if (code === leftSquareBracket) {
  //     effects.enter('labelReference')
  //     effects.enter('reference')
  //     effects.enter('referenceStartMarker')
  //     effects.consume(code)
  //     effects.exit('referenceStartMarker')
  //     return referenceStart
  //   }
  //
  //   // Itâ€™s a shortcut reference!
  //   return ok
  // }
  //
  // function resourceInformationStart(code) {
  //   if (code === tab || code === lineFeed || code === space) {
  //     effects.consume(code)
  //     return resourceInformationStart
  //   }
  //
  //   if (code === rightParenthesis) {
  //     return resourceInformationEnd
  //   }
  //
  //   if (code === lessThan) {
  //     effects.enter('resourceDestinationEnclosed')
  //     effects.enter('resourceDestinationStartMarker')
  //     effects.consume(code)
  //     effects.exit('resourceDestinationStartMarker')
  //     return resourceDestinationEnclosedBefore
  //   }
  //
  //   if (code !== code || asciiControl(code)) {
  //     return nok
  //   }
  //
  //   effects.enter('resourceDestination')
  //   effects.consume(code)
  //   return resourceDestination
  // }
  //
  // function resourceDestinationEnclosedBefore(code) {
  //   if (code !== code || code === lineFeed || code === lessThan) {
  //     return nok
  //   }
  //
  //   if (code === greaterThan) {
  //     return resourceDestinationEnclosedAfter
  //   }
  //
  //   effects.enter('resourceDestination')
  //   effects.consume(code)
  //   return resourceDestinationEnclosed
  // }
  //
  // function resourceDestinationEnclosed(code) {
  //   if (code !== code || code === lineFeed || code === lessThan) {
  //     return nok
  //   }
  //
  //   if (code === greaterThan) {
  //     effects.exit('resourceDestination')
  //     return resourceDestinationEnclosedAfter
  //   }
  //
  //   if (code === backslash) {
  //     effects.consume(code)
  //     return resourceDestinationEnclosedCharacterEscapeOpen
  //   }
  //
  //   effects.consume(code)
  //   return resourceDestinationEnclosed
  // }
  //
  // function resourceDestinationEnclosedCharacterEscapeOpen(code) {
  //   if (code === lessThan || code === greaterThan || code === backslash) {
  //     effects.consume(code)
  //   }
  //
  //   return resourceDestinationEnclosed
  // }
  //
  // function resourceDestinationEnclosedAfter(code) {
  //   // Only used for `>`.
  //   if (code !== greaterThan) {
  //     return nok
  //   }
  //
  //   effects.enter('resourceDestinationEndMarker')
  //   effects.consume(code)
  //   effects.exit('resourceDestinationEndMarker')
  //   effects.exit('resourceDestinationEnclosed')
  //
  //   return resourceInformationBetween
  // }
  //
  // function resourceDestination(code) {
  //   if (code === tab || code === lineFeed || code === space) {
  //     effects.consume(code)
  //     effects.exit('resourceDestination')
  //     return resourceInformationBetween
  //   }
  //
  //   if (code === leftParenthesis) {
  //     balance++
  //     effects.consume(code)
  //     return resourceDestination
  //   }
  //
  //   if (code === rightParenthesis) {
  //     if (balance === 0) {
  //       effects.exit('resourceDestination')
  //       return resourceInformationEnd
  //     }
  //
  //     balance--
  //     effects.consume(code)
  //     return resourceDestination
  //   }
  //
  //   if (code === backslash) {
  //     effects.consume(code)
  //     return resourceDestinationCharacterEscapeOpen
  //   }
  //
  //   if (code !== code || asciiControl(code)) {
  //     return nok
  //   }
  //
  //   effects.consume(code)
  //   return resourceDestination
  // }
  //
  // function resourceDestinationCharacterEscapeOpen(code) {
  //   if (
  //     code === leftParenthesis ||
  //     code === rightParenthesis ||
  //     code === backslash
  //   ) {
  //     effects.consume(code)
  //   }
  //
  //   return resourceDestination
  // }
  //
  // function resourceInformationBetween(code) {
  //   if (code === tab || code === lineFeed || code === space) {
  //     effects.consume(code)
  //     return resourceInformationBetween
  //   }
  //
  //   if (
  //     code === quotationMark ||
  //     code === apostrophe ||
  //     code === leftParenthesis
  //   ) {
  //     effects.enter('resourceTitle')
  //     effects.enter('resourceTitleStartMarker')
  //     effects.consume(code)
  //     effects.exit('resourceTitleStartMarker')
  //
  //     return code === quotationMark
  //       ? resourceTitleDoubleQuoted
  //       : code === apostrophe
  //       ? resourceTitleSingleQuoted
  //       : resourceTitleParenQuoted
  //   }
  //
  //   if (code === rightParenthesis) {
  //     return resourceInformationEnd
  //   }
  //
  //   return nok
  // }
  //
  // function resourceTitleDoubleQuoted(code) {
  //   if (code !== code) {
  //     return nok
  //   }
  //
  //   if (code === quotationMark) {
  //     return resourceTitleEnd
  //   }
  //
  //   if (code === backslash) {
  //     effects.consume(code)
  //     return resourceTitleDoubleQuotedCharacterEscapeOpen
  //   }
  //
  //   effects.consume(code)
  //   return resourceTitleDoubleQuoted
  // }
  //
  // function resourceTitleDoubleQuotedCharacterEscapeOpen(code) {
  //   if (code === quotationMark || code === backslash) {
  //     effects.consume(code)
  //   }
  //
  //   return resourceTitleDoubleQuoted
  // }
  //
  // function resourceTitleSingleQuoted(code) {
  //   if (code !== code) {
  //     return nok
  //   }
  //
  //   if (code === apostrophe) {
  //     return resourceTitleEnd
  //   }
  //
  //   if (code === backslash) {
  //     effects.consume(code)
  //     return resourceTitleSingleQuotedCharacterEscapeOpen
  //   }
  //
  //   effects.consume(code)
  //   return resourceTitleSingleQuoted
  // }
  //
  // function resourceTitleSingleQuotedCharacterEscapeOpen(code) {
  //   if (code === apostrophe || code === backslash) {
  //     effects.consume(code)
  //   }
  //
  //   return resourceTitleSingleQuoted
  // }
  //
  // function resourceTitleParenQuoted(code) {
  //   if (code !== code) {
  //     return nok
  //   }
  //
  //   if (code === rightParenthesis) {
  //     return resourceTitleEnd
  //   }
  //
  //   if (code === backslash) {
  //     effects.consume(code)
  //     return resourceTitleParenQuotedCharacterEscapeOpen
  //   }
  //
  //   effects.consume(code)
  //   return resourceTitleParenQuoted
  // }
  //
  // function resourceTitleParenQuotedCharacterEscapeOpen(code) {
  //   if (code === rightParenthesis || code === backslash) {
  //     effects.consume(code)
  //   }
  //
  //   return resourceTitleParenQuoted
  // }
  //
  // // Only used for valid endings.
  // function resourceTitleEnd(code) {
  //   effects.enter('resourceTitleEndMarker')
  //   effects.consume(code)
  //   effects.exit('resourceTitleEndMarker')
  //   effects.exit('resourceTitle')
  //   return resourceTitleAfter
  // }
  //
  // function resourceTitleAfter(code) {
  //   if (code === tab || code === lineFeed || code === space) {
  //     effects.consume(code)
  //     return resourceTitleAfter
  //   }
  //
  //   if (code === rightParenthesis) {
  //     return resourceInformationEnd
  //   }
  //
  //   return nok
  // }
  //
  // function resourceInformationEnd(code) {
  //   if (code !== rightParenthesis) {
  //     return nok
  //   }
  //
  //   effects.enter('resourceEndMarker')
  //   effects.consume(code)
  //   effects.exit('resourceEndMarker')
  //   effects.exit('resource')
  //   effects.exit('labelResource')
  //   return ok
  // }
  //
  // function referenceStart(code) {
  //   if (code !== code) {
  //     return nok
  //   }
  //
  //   if (code === rightSquareBracket) {
  //     return referenceEnd
  //   }
  //
  //   effects.enter('referenceLabel')
  //   return reference
  // }
  //
  // function reference(code) {
  //   if (code !== code) {
  //     return nok
  //   }
  //
  //   if (code === rightSquareBracket) {
  //     effects.exit('referenceLabel')
  //     return ok
  //   }
  //
  //   if (code === backslash) {
  //     effects.consume(code)
  //     return referenceCharacterEscapeOpen
  //   }
  //
  //   effects.consume(code)
  //   return reference
  // }
  //
  // function referenceCharacterEscapeOpen(code) {
  //   if (code === backslash || code === rightSquareBracket) {
  //     effects.consume(code)
  //   }
  //
  //   return reference
  // }
  //
  // // Only used for valid endings.
  // function referenceEnd(code) {
  //   effects.enter('referenceStartMarker')
  //   effects.consume(code)
  //   effects.exit('referenceStartMarker')
  //   effects.exit('reference')
  //   return ok
  // }
}
