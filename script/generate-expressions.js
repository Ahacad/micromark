var fs = require('fs')
var path = require('path')
var regenerate = require('regenerate')
var codes = require('../lib/character/codes')

var ws = regenerate()
  .add(codes.tab, codes.lineFeed, codes.formFeed, codes.carriageReturn)
  .add(unicode('Space_Separator'))
  .toRegExp()

var pcAll = regenerate()
  .addRange(codes.exclamationMark, codes.slash)
  .addRange(codes.colon, codes.atSign)
  .addRange(codes.leftSquareBracket, codes.graveAccent)
  .addRange(codes.leftCurlyBrace, codes.tilde)
  .add(unicode('Connector_Punctuation'))
  .add(unicode('Dash_Punctuation'))
  .add(unicode('Close_Punctuation'))
  .add(unicode('Final_Punctuation'))
  .add(unicode('Initial_Punctuation'))
  .add(unicode('Other_Punctuation'))
  .add(unicode('Open_Punctuation'))
  .valueOf()

// To do: support astrals as well.
var pc = regenerate()
  // Ignore non-BMP characters.
  .add(pcAll.filter((d) => d <= 0xffff))
  .toRegExp()

fs.writeFileSync(
  path.join('lib', 'constant', 'unicode-whitespace-regex.js'),
  '// This module is generated by `script/`.\nmodule.exports = ' + ws + '\n'
)

fs.writeFileSync(
  path.join('lib', 'constant', 'unicode-punctuation-regex.js'),
  '// This module is generated by `script/`.\nmodule.exports = ' + pc + '\n'
)

function unicode(d) {
  return require('unicode-13.0.0/General_Category/' + d + '/code-points')
}
