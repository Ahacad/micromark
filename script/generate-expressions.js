var fs = require('fs')
var path = require('path')
var regenerate = require('regenerate')
var codes = require('../lib/character/codes')

var pcAll = regenerate()
  .addRange(codes.exclamationMark, codes.slash)
  .addRange(codes.colon, codes.atSign)
  .addRange(codes.leftSquareBracket, codes.graveAccent)
  .addRange(codes.leftCurlyBrace, codes.tilde)
  .add(unicode('Connector_Punctuation'))
  .add(unicode('Dash_Punctuation'))
  .add(unicode('Close_Punctuation'))
  .add(unicode('Final_Punctuation'))
  .add(unicode('Initial_Punctuation'))
  .add(unicode('Other_Punctuation'))
  .add(unicode('Open_Punctuation'))
  .valueOf()

// Note: we donâ€™t support astrals.
var pc = regenerate()
  .add(
    pcAll.filter(function (d) {
      return d <= 0xffff
    })
  )
  .toRegExp()

fs.writeFileSync(
  path.join('lib', 'constant', 'unicode-punctuation-regex.js'),
  [
    '// This module is generated by `script/`.',
    '//',
    '// CommonMark handles attention (emphasis, strong) markers based on what comes',
    '// before or after them.',
    '// One such difference is if those characters are Unicode punctuation.',
    '// This script is generated from the Unicode data.',
    'module.exports = ' + pc,
    ''
  ].join('\n')
)

function unicode(d) {
  return require('@unicode/unicode-13.0.0/General_Category/' +
    d +
    '/code-points')
}
