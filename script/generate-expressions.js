var fs = require('fs')
var path = require('path')
var regenerate = require('regenerate')

var tab = 9 // '\t'
var lineFeed = 10 // '\n'
var formFeed = 12 // '\f'
var carriageReturn = 13 // '\r'
var exclamationMark = 33 // '!'
var slash = 47 // '/'
var colon = 58 // ':'
var atSign = 64 // '@'
var leftSquareBracket = 91 // '['
var graveAccent = 96 // '`'
var leftCurlyBrace = 123 // '{'
var tilde = 126 // '~'

var ws = regenerate()
  .add(tab, lineFeed, formFeed, carriageReturn)
  .add(unicode('Space_Separator'))
  .toRegExp()

var pcAll = regenerate()
  .addRange(exclamationMark, slash)
  .addRange(colon, atSign)
  .addRange(leftSquareBracket, graveAccent)
  .addRange(leftCurlyBrace, tilde)
  .add(unicode('Connector_Punctuation'))
  .add(unicode('Dash_Punctuation'))
  .add(unicode('Close_Punctuation'))
  .add(unicode('Final_Punctuation'))
  .add(unicode('Initial_Punctuation'))
  .add(unicode('Other_Punctuation'))
  .add(unicode('Open_Punctuation'))
  .valueOf()

// To do: support astrals as well.
var pc = regenerate()
  // Ignore non-BMP characters.
  .add(pcAll.filter((d) => d <= 0xffff))
  .toRegExp()

fs.writeFileSync(
  path.join('lib', 'character', 'group', 'unicode-whitespace-regex.js'),
  '// This module is generated by `script/`.\nmodule.exports = ' + ws + '\n'
)

fs.writeFileSync(
  path.join('lib', 'character', 'group', 'unicode-punctuation-regex.js'),
  '// This module is generated by `script/`.\nmodule.exports = ' + pc + '\n'
)

function unicode(d) {
  return require('unicode-13.0.0/General_Category/' + d + '/code-points')
}
